

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Thu Jun 24 12:08:38 2021

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 3 "E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 3 "E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
    45  2007  2CE4               	dw 0X2CE4 ;#
    46                           	FNCALL	_main,_tx
    47                           	FNROOT	_main
    48                           	global	main@F1603
    49                           psect	idataBANK0,class=CODE,space=0,delta=2
    50                           global __pidataBANK0
    51  074B                     __pidataBANK0:
    52                           	file	"E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
    53                           	line	28
    54                           
    55                           ;initializer for main@F1603
    56  074B  3473               	retlw	073h
    57  074C  3461               	retlw	061h
    58  074D  3462               	retlw	062h
    59  074E  3469               	retlw	069h
    60  074F  346E               	retlw	06Eh
    61  0750  3400               	retlw	0
    62                           	global	_PORTC
    63  0007                     _PORTC	set	7
    64                           	global	_RCSTA
    65  0018                     _RCSTA	set	24
    66                           	global	_TXREG
    67  0019                     _TXREG	set	25
    68                           	global	_TXIF
    69  0064                     _TXIF	set	100
    70                           	global	_SPBRG
    71  0099                     _SPBRG	set	153
    72                           	global	_TRISC
    73  0087                     _TRISC	set	135
    74                           	global	_TXSTA
    75  0098                     _TXSTA	set	152
    76                           	global	_ANSEL
    77  0188                     _ANSEL	set	392
    78                           	global	_ANSELH
    79  0189                     _ANSELH	set	393
    80                           	file	"name.as"
    81                           	line	#
    82                           psect cinit,class=CODE,delta=2
    83                           global start_initialization
    84  0751                     start_initialization:
    85                           
    86                           psect	dataBANK0,class=BANK0,space=1
    87                           global __pdataBANK0
    88  0020                     __pdataBANK0:
    89                           	file	"E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
    90  0020                     main@F1603:
    91  0020                            ds      6
    92                           
    93                           ; Initialize objects allocated to BANK0
    94                           	global __pidataBANK0
    95                           psect cinit,class=CODE,delta=2
    96  0751  120A  118A  274B   	fcall	__pidataBANK0+0		;fetch initializer
              120A  118A         
    97  0756  00A0               	movwf	__pdataBANK0+0&07fh		
    98  0757  120A  118A  274C   	fcall	__pidataBANK0+1		;fetch initializer
              120A  118A         
    99  075C  00A1               	movwf	__pdataBANK0+1&07fh		
   100  075D  120A  118A  274D   	fcall	__pidataBANK0+2		;fetch initializer
              120A  118A         
   101  0762  00A2               	movwf	__pdataBANK0+2&07fh		
   102  0763  120A  118A  274E   	fcall	__pidataBANK0+3		;fetch initializer
              120A  118A         
   103  0768  00A3               	movwf	__pdataBANK0+3&07fh		
   104  0769  120A  118A  274F   	fcall	__pidataBANK0+4		;fetch initializer
              120A  118A         
   105  076E  00A4               	movwf	__pdataBANK0+4&07fh		
   106  076F  120A  118A  2750   	fcall	__pidataBANK0+5		;fetch initializer
              120A  118A         
   107  0774  00A5               	movwf	__pdataBANK0+5&07fh		
   108                           psect cinit,class=CODE,delta=2
   109                           global end_of_initialization
   110                           
   111                           ;End of C runtime variable initialization code
   112                           
   113  0775                     end_of_initialization:
   114  0775  0183               clrf status
   115  0776  120A  118A  2FB8   ljmp _main	;jump to C main() function
   116                           psect	cstackCOMMON,class=COMMON,space=1
   117                           global __pcstackCOMMON
   118  0070                     __pcstackCOMMON:
   119                           	global	?_tx
   120  0070                     ?_tx:	; 0 bytes @ 0x0
   121                           	global	??_tx
   122  0070                     ??_tx:	; 0 bytes @ 0x0
   123                           	global	?_main
   124  0070                     ?_main:	; 0 bytes @ 0x0
   125  0070                     	ds	1
   126                           	global	tx@pointer
   127  0071                     tx@pointer:	; 1 bytes @ 0x1
   128  0071                     	ds	1
   129                           	global	tx@i
   130  0072                     tx@i:	; 2 bytes @ 0x2
   131  0072                     	ds	2
   132                           	global	??_main
   133  0074                     ??_main:	; 0 bytes @ 0x4
   134  0074                     	ds	3
   135                           	global	main@name
   136  0077                     main@name:	; 6 bytes @ 0x7
   137  0077                     	ds	6
   138                           	global	main@pointer
   139  007D                     main@pointer:	; 1 bytes @ 0xD
   140  007D                     	ds	1
   141 ;;Data sizes: Strings 0, constant 0, data 6, bss 0, persistent 0 stack 0
   142 ;;Auto spaces:   Size  Autos    Used
   143 ;; COMMON          14     14      14
   144 ;; BANK0           80      0       6
   145 ;; BANK1           80      0       0
   146 ;; BANK3           96      0       0
   147 ;; BANK2           96      0       0
   148                           
   149 ;;
   150 ;; Pointer list with targets:
   151                           
   152 ;; main@pointer	PTR int  size(1) Largest target is 6
   153 ;;		 -> main@name(COMMON[6]), 
   154 ;;
   155 ;; tx@pointer	PTR PTR unsigned char  size(1) Largest target is 6
   156 ;;		 -> main@name(COMMON[6]), 
   157 ;;
   158                           
   159                           
   160 ;;
   161 ;; Critical Paths under _main in COMMON
   162 ;;
   163 ;;   _main->_tx
   164 ;;
   165 ;; Critical Paths under _main in BANK0
   166 ;;
   167 ;;   None.
   168 ;;
   169 ;; Critical Paths under _main in BANK1
   170 ;;
   171 ;;   None.
   172 ;;
   173 ;; Critical Paths under _main in BANK3
   174 ;;
   175 ;;   None.
   176 ;;
   177 ;; Critical Paths under _main in BANK2
   178 ;;
   179 ;;   None.
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   183 ;;
   184                           
   185 ;;
   186 ;;Call Graph Tables:
   187 ;;
   188 ;; ---------------------------------------------------------------------------------
   189 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   190 ;; ---------------------------------------------------------------------------------
   191 ;; (0) _main                                                10    10      0     116
   192 ;;                                              4 COMMON    10    10      0
   193 ;;                                 _tx
   194 ;; ---------------------------------------------------------------------------------
   195 ;; (1) _tx                                                   4     4      0      69
   196 ;;                                              0 COMMON     4     4      0
   197 ;; ---------------------------------------------------------------------------------
   198 ;; Estimated maximum stack depth 1
   199 ;; ---------------------------------------------------------------------------------
   200                           
   201 ;; Call Graph Graphs:
   202                           
   203 ;; _main (ROOT)
   204 ;;   _tx
   205 ;;
   206                           
   207 ;; Address spaces:
   208                           
   209 ;;Name               Size   Autos  Total    Cost      Usage
   210 ;;BANK3               60      0       0       9        0.0%
   211 ;;BITBANK3            60      0       0       8        0.0%
   212 ;;SFR3                 0      0       0       4        0.0%
   213 ;;BITSFR3              0      0       0       4        0.0%
   214 ;;BANK2               60      0       0      11        0.0%
   215 ;;BITBANK2            60      0       0      10        0.0%
   216 ;;SFR2                 0      0       0       5        0.0%
   217 ;;BITSFR2              0      0       0       5        0.0%
   218 ;;SFR1                 0      0       0       2        0.0%
   219 ;;BITSFR1              0      0       0       2        0.0%
   220 ;;BANK1               50      0       0       7        0.0%
   221 ;;BITBANK1            50      0       0       6        0.0%
   222 ;;CODE                 0      0       0       0        0.0%
   223 ;;DATA                 0      0      15      12        0.0%
   224 ;;ABS                  0      0      14       3        0.0%
   225 ;;NULL                 0      0       0       0        0.0%
   226 ;;STACK                0      0       1       2        0.0%
   227 ;;BANK0               50      0       6       5        7.5%
   228 ;;BITBANK0            50      0       0       4        0.0%
   229 ;;SFR0                 0      0       0       1        0.0%
   230 ;;BITSFR0              0      0       0       1        0.0%
   231 ;;COMMON               E      E       E       1      100.0%
   232 ;;BITCOMMON            E      0       0       0        0.0%
   233 ;;EEDATA             100      0       0       0        0.0%
   234                           
   235                           	global	_main
   236                           psect	maintext,global,class=CODE,delta=2
   237                           global __pmaintext
   238  07B8                     __pmaintext:
   239                           
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 19 in file "E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  name            6    7[COMMON] unsigned char [6]
   247 ;;  pointer         1   13[COMMON] PTR int 
   248 ;;		 -> main@name(6), 
   249 ;; Return value:  Size  Location     Type
   250 ;;		None               void
   251 ;; Registers used:
   252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 17F/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         7       0       0       0       0
   260 ;;      Temps:          3       0       0       0       0
   261 ;;      Totals:        10       0       0       0       0
   262 ;;Total ram usage:       10 bytes
   263 ;; Hardware stack levels required when called:    1
   264 ;; This function calls:
   265 ;;		_tx
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           psect	maintext
   271                           	file	"E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
   272                           	line	19
   273                           	global	__size_of_main
   274  0048                     	__size_of_main	equ	__end_of_main-_main
   275                           	
   276  07B8                     _main:	
   277                           	opt	stack 7
   278                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   279                           	line	21
   280                           	
   281  07B8                     l2232:	
   282                           ;name.c: 21: PORTC=0X00;
   283  07B8  1283               	bcf	status, 5	;RP0=0, select bank0
   284  07B9  1303               	bcf	status, 6	;RP1=0, select bank0
   285  07BA  0187               	clrf	(7)	;volatile
   286                           	line	22
   287                           	
   288  07BB                     l2234:	
   289                           ;name.c: 22: TRISC=0X80;
   290  07BB  3080               	movlw	(080h)
   291  07BC  1683               	bsf	status, 5	;RP0=1, select bank1
   292  07BD  1303               	bcf	status, 6	;RP1=0, select bank1
   293  07BE  0087               	movwf	(135)^080h	;volatile
   294                           	line	23
   295                           	
   296  07BF                     l2236:	
   297                           ;name.c: 23: ANSEL=0X00;
   298  07BF  1683               	bsf	status, 5	;RP0=1, select bank3
   299  07C0  1703               	bsf	status, 6	;RP1=1, select bank3
   300  07C1  0188               	clrf	(392)^0180h	;volatile
   301                           	line	24
   302                           	
   303  07C2                     l2238:	
   304                           ;name.c: 24: ANSELH=0X00;
   305  07C2  0189               	clrf	(393)^0180h	;volatile
   306                           	line	25
   307                           	
   308  07C3                     l2240:	
   309                           ;name.c: 25: TXSTA=0X26;
   310  07C3  3026               	movlw	(026h)
   311  07C4  1683               	bsf	status, 5	;RP0=1, select bank1
   312  07C5  1303               	bcf	status, 6	;RP1=0, select bank1
   313  07C6  0098               	movwf	(152)^080h	;volatile
   314                           	line	26
   315                           	
   316  07C7                     l2242:	
   317                           ;name.c: 26: RCSTA=0X90;
   318  07C7  3090               	movlw	(090h)
   319  07C8  1283               	bcf	status, 5	;RP0=0, select bank0
   320  07C9  1303               	bcf	status, 6	;RP1=0, select bank0
   321  07CA  0098               	movwf	(24)	;volatile
   322                           	line	27
   323                           	
   324  07CB                     l2244:	
   325                           ;name.c: 27: SPBRG=25;
   326  07CB  3019               	movlw	(019h)
   327  07CC  1683               	bsf	status, 5	;RP0=1, select bank1
   328  07CD  1303               	bcf	status, 6	;RP1=0, select bank1
   329  07CE  0099               	movwf	(153)^080h	;volatile
   330                           	line	28
   331                           	
   332  07CF                     l2246:	
   333                           ;name.c: 28: char name[]="sabin";
   334  07CF  3077               	movlw	(main@name)&0ffh
   335  07D0  0084               	movwf	fsr0
   336  07D1  1283               	bcf	status, 5	;RP0=0, select bank0
   337  07D2  1303               	bcf	status, 6	;RP1=0, select bank0
   338  07D3  0820               	movf	(main@F1603),w
   339  07D4  0080               	movwf	indf
   340  07D5  0A84               	incf	fsr0,f
   341  07D6  0821               	movf	(main@F1603)+1,w
   342  07D7  0080               	movwf	indf
   343  07D8  0A84               	incf	fsr0,f
   344  07D9  0822               	movf	(main@F1603)+2,w
   345  07DA  0080               	movwf	indf
   346  07DB  0A84               	incf	fsr0,f
   347  07DC  0823               	movf	(main@F1603)+3,w
   348  07DD  0080               	movwf	indf
   349  07DE  0A84               	incf	fsr0,f
   350  07DF  0824               	movf	(main@F1603)+4,w
   351  07E0  0080               	movwf	indf
   352  07E1  0A84               	incf	fsr0,f
   353  07E2  0825               	movf	(main@F1603)+5,w
   354  07E3  0080               	movwf	indf
   355                           	line	30
   356                           	
   357  07E4                     l2248:	
   358                           ;name.c: 29: int *pointer;
   359                           ;name.c: 30: pointer=&name;
   360  07E4  3077               	movlw	(main@name)&0ffh
   361  07E5  00F4               	movwf	(??_main+0)+0
   362  07E6  0874               	movf	(??_main+0)+0,w
   363  07E7  00FD               	movwf	(main@pointer)
   364  07E8  2FE9               	goto	l2250
   365                           	line	31
   366                           ;name.c: 31: while(1)
   367                           	
   368  07E9                     l1040:	
   369                           	line	33
   370                           	
   371  07E9                     l2250:	
   372                           ;name.c: 32: {
   373                           ;name.c: 33: tx(pointer);
   374  07E9  087D               	movf	(main@pointer),w
   375  07EA  120A  118A  2779   	fcall	_tx
              120A  118A         
   376                           	line	34
   377                           	
   378  07EF                     l2252:	
   379                           ;name.c: 34: _delay((unsigned long)((500)*(4000000/4000.0)));
   380                           	opt asmopt_off
   381  07EF  3003               movlw  3
   382  07F0  00F6               movwf	((??_main+0)+0+2),f
   383  07F1  3088               movlw	136
   384  07F2  00F5               movwf	((??_main+0)+0+1),f
   385  07F3  3056               	movlw	86
   386  07F4  00F4               movwf	((??_main+0)+0),f
   387  07F5                     u2227:
   388  07F5  0BF4               	decfsz	((??_main+0)+0),f
   389  07F6  2FF5               	goto	u2227
   390  07F7  0BF5               	decfsz	((??_main+0)+0+1),f
   391  07F8  2FF5               	goto	u2227
   392  07F9  0BF6               	decfsz	((??_main+0)+0+2),f
   393  07FA  2FF5               	goto	u2227
   394                           opt asmopt_on
   395                           
   396  07FB  2FE9               	goto	l2250
   397                           	line	35
   398                           	
   399  07FC                     l1041:	
   400                           	line	31
   401  07FC  2FE9               	goto	l2250
   402                           	
   403  07FD                     l1042:	
   404                           	line	36
   405                           	
   406  07FD                     l1043:	
   407                           	global	start
   408  07FD  120A  118A  2800   	ljmp	start
   409                           	opt stack 0
   410                           GLOBAL	__end_of_main
   411  0800                     	__end_of_main:
   412 ;; =============== function _main ends ============
   413                           
   414                           	signat	_main,88
   415                           	global	_tx
   416                           psect	text85,local,class=CODE,delta=2
   417                           global __ptext85
   418  0779                     __ptext85:
   419                           
   420 ;; *************** function _tx *****************
   421 ;; Defined at:
   422 ;;		line 5 in file "E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  pointer         1    wreg     PTR PTR unsigned char 
   425 ;;		 -> main@name(6), 
   426 ;; Auto vars:     Size  Location     Type
   427 ;;  pointer         1    1[COMMON] PTR PTR unsigned char 
   428 ;;		 -> main@name(6), 
   429 ;;  i               2    2[COMMON] int 
   430 ;; Return value:  Size  Location     Type
   431 ;;		None               void
   432 ;; Registers used:
   433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         3       0       0       0       0
   441 ;;      Temps:          1       0       0       0       0
   442 ;;      Totals:         4       0       0       0       0
   443 ;;Total ram usage:        4 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           psect	text85
   452                           	file	"E:\KTU\Softwares\MP lab\UART\Transmitname\name.c"
   453                           	line	5
   454                           	global	__size_of_tx
   455  003F                     	__size_of_tx	equ	__end_of_tx-_tx
   456                           	
   457  0779                     _tx:	
   458                           	opt	stack 7
   459                           ; Regs used in _tx: [wreg-fsr0h+status,2+status,0+btemp+1]
   460                           ;tx@pointer stored from wreg
   461                           	line	7
   462  0779  00F1               	movwf	(tx@pointer)
   463                           	
   464  077A                     l2218:	
   465                           ;name.c: 6: int i;
   466                           ;name.c: 7: for(i=0;i<5;i++)
   467  077A  01F2               	clrf	(tx@i)
   468  077B  01F3               	clrf	(tx@i+1)
   469                           	
   470  077C                     l2220:	
   471  077C  0873               	movf	(tx@i+1),w
   472  077D  3A80               	xorlw	80h
   473  077E  00FF               	movwf	btemp+1
   474  077F  3080               	movlw	(high(05h))^80h
   475  0780  027F               	subwf	btemp+1,w
   476  0781  1D03               	skipz
   477  0782  2F85               	goto	u2185
   478  0783  3005               	movlw	low(05h)
   479  0784  0272               	subwf	(tx@i),w
   480  0785                     u2185:
   481                           
   482  0785  1C03               	skipc
   483  0786  2F88               	goto	u2181
   484  0787  2F89               	goto	u2180
   485  0788                     u2181:
   486  0788  2F8B               	goto	l2224
   487  0789                     u2180:
   488  0789  2FB0               	goto	l1032
   489                           	
   490  078A                     l2222:	
   491  078A  2FB0               	goto	l1032
   492                           	line	8
   493                           	
   494  078B                     l1027:	
   495                           	line	9
   496                           	
   497  078B                     l2224:	
   498                           ;name.c: 8: {
   499                           ;name.c: 9: TXREG=*(pointer++);
   500  078B  0871               	movf	(tx@pointer),w
   501  078C  0084               	movwf	fsr0
   502  078D  0800               	movf	indf,w
   503  078E  1283               	bcf	status, 5	;RP0=0, select bank0
   504  078F  1303               	bcf	status, 6	;RP1=0, select bank0
   505  0790  0099               	movwf	(25)	;volatile
   506                           	
   507  0791                     l2226:	
   508  0791  3001               	movlw	(01h)
   509  0792  00F0               	movwf	(??_tx+0)+0
   510  0793  0870               	movf	(??_tx+0)+0,w
   511  0794  07F1               	addwf	(tx@pointer),f
   512                           	line	11
   513                           ;name.c: 11: while(TXIF==0);
   514  0795  2F96               	goto	l1029
   515                           	
   516  0796                     l1030:	
   517                           	
   518  0796                     l1029:	
   519  0796  1E0C               	btfss	(100/8),(100)&7
   520  0797  2F99               	goto	u2191
   521  0798  2F9A               	goto	u2190
   522  0799                     u2191:
   523  0799  2F96               	goto	l1029
   524  079A                     u2190:
   525                           	
   526  079A                     l1031:	
   527                           	line	12
   528                           ;name.c: 12: TXIF=0;
   529  079A  120C               	bcf	(100/8),(100)&7
   530                           	line	7
   531                           	
   532  079B                     l2228:	
   533  079B  3001               	movlw	low(01h)
   534  079C  07F2               	addwf	(tx@i),f
   535  079D  1803               	skipnc
   536  079E  0AF3               	incf	(tx@i+1),f
   537  079F  3000               	movlw	high(01h)
   538  07A0  07F3               	addwf	(tx@i+1),f
   539                           	
   540  07A1                     l2230:	
   541  07A1  0873               	movf	(tx@i+1),w
   542  07A2  3A80               	xorlw	80h
   543  07A3  00FF               	movwf	btemp+1
   544  07A4  3080               	movlw	(high(05h))^80h
   545  07A5  027F               	subwf	btemp+1,w
   546  07A6  1D03               	skipz
   547  07A7  2FAA               	goto	u2205
   548  07A8  3005               	movlw	low(05h)
   549  07A9  0272               	subwf	(tx@i),w
   550  07AA                     u2205:
   551                           
   552  07AA  1C03               	skipc
   553  07AB  2FAD               	goto	u2201
   554  07AC  2FAE               	goto	u2200
   555  07AD                     u2201:
   556  07AD  2F8B               	goto	l2224
   557  07AE                     u2200:
   558  07AE  2FB0               	goto	l1032
   559                           	
   560  07AF                     l1028:	
   561                           	line	15
   562                           ;name.c: 14: }
   563                           ;name.c: 15: while(TXIF==0);
   564  07AF  2FB0               	goto	l1032
   565                           	
   566  07B0                     l1033:	
   567                           	
   568  07B0                     l1032:	
   569  07B0  1283               	bcf	status, 5	;RP0=0, select bank0
   570  07B1  1303               	bcf	status, 6	;RP1=0, select bank0
   571  07B2  1E0C               	btfss	(100/8),(100)&7
   572  07B3  2FB5               	goto	u2211
   573  07B4  2FB6               	goto	u2210
   574  07B5                     u2211:
   575  07B5  2FB0               	goto	l1032
   576  07B6                     u2210:
   577                           	
   578  07B6                     l1034:	
   579                           	line	16
   580                           ;name.c: 16: TXIF=0;
   581  07B6  120C               	bcf	(100/8),(100)&7
   582                           	line	17
   583                           	
   584  07B7                     l1035:	
   585  07B7  0008               	return
   586                           	opt stack 0
   587                           GLOBAL	__end_of_tx
   588  07B8                     	__end_of_tx:
   589 ;; =============== function _tx ends ============
   590                           
   591                           	signat	_tx,4216
   592                           psect	text86,local,class=CODE,delta=2
   593                           global __ptext86
   594  0000                     __ptext86:
   595                           	global	btemp
   596  007E                     	btemp set 07Eh
   597                           
   598                           	DABS	1,126,2	;btemp
   599                           	global	wtemp0
   600  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Thu Jun 24 12:08:38 2021

                  _tx 0779                   ?_tx 0070                   fsr0 0004                   indf 0000  
                 tx@i 0072                  ??_tx 0070                  l1030 0796                  l1031 079A  
                l1032 07B0                  l1040 07E9                  l1033 07B0                  l1041 07FC  
                l1034 07B6                  l1042 07FD                  l1035 07B7                  l1027 078B  
                l1043 07FD                  l1028 07AF                  l1029 0796                  l2220 077C  
                l2230 07A1                  l2222 078A                  l2224 078B                  l2240 07C3  
                l2232 07B8                  l2226 0791                  l2218 077A                  l2250 07E9  
                l2242 07C7                  l2234 07BB                  l2228 079B                  l2252 07EF  
                l2244 07CB                  l2236 07BF                  l2246 07CF                  l2238 07C2  
                l2248 07E4                  u2200 07AE                  u2201 07AD                  u2210 07B6  
                u2211 07B5                  u2205 07AA                  u2227 07F5                  u2180 0789  
                u2181 0788                  u2190 079A                  u2191 0799                  u2185 0785  
                _TXIF 0064                  _main 07B8                  btemp 007E           main@pointer 007D  
                start 0000                 ?_main 0070                 _ANSEL 0188                 _RCSTA 0018  
               _SPBRG 0099                 _PORTC 0007                 _TRISC 0087                 _TXREG 0019  
               _TXSTA 0098                 status 0003                 wtemp0 007E          __end_of_main 0800  
              ??_main 0074                _ANSELH 0189        __pcstackCOMMON 0070          __pidataBANK0 074B  
          __end_of_tx 07B8            __pmaintext 07B8  end_of_initialization 0775   start_initialization 0751  
         __pdataBANK0 0020           __size_of_tx 003F             main@F1603 0020              __ptext85 0779  
            __ptext86 0000         __size_of_main 0048             tx@pointer 0071              main@name 0077  
