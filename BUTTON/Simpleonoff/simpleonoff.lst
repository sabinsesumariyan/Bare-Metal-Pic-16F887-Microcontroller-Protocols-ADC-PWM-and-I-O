

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Thu Apr 22 20:44:46 2021

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	global	_PORTA
    44                           psect	maintext,global,class=CODE,delta=2
    45                           global __pmaintext
    46  07AA                     __pmaintext:
    47  0005                     _PORTA	set	5
    48                           	global	_PORTB
    49  0006                     _PORTB	set	6
    50                           	global	_RA0
    51  0028                     _RA0	set	40
    52                           	global	_RB0
    53  0030                     _RB0	set	48
    54                           	global	_TRISA
    55  0085                     _TRISA	set	133
    56                           	global	_TRISB
    57  0086                     _TRISB	set	134
    58                           	global	_ANSEL
    59  0188                     _ANSEL	set	392
    60                           	global	_ANSELH
    61  0189                     _ANSELH	set	393
    62                           	file	"simpleonoff.as"
    63                           	line	#
    64                           psect cinit,class=CODE,delta=2
    65                           global start_initialization
    66  07A6                     start_initialization:
    67                           
    68                           psect cinit,class=CODE,delta=2
    69                           global end_of_initialization
    70                           
    71                           ;End of C runtime variable initialization code
    72                           
    73  07A6                     end_of_initialization:
    74  07A6  0183               clrf status
    75  07A7  120A  118A  2FAA   ljmp _main	;jump to C main() function
    76                           psect	cstackCOMMON,class=COMMON,space=1
    77                           global __pcstackCOMMON
    78  0070                     __pcstackCOMMON:
    79                           	global	?_main
    80  0070                     ?_main:	; 0 bytes @ 0x0
    81                           	global	??_main
    82  0070                     ??_main:	; 0 bytes @ 0x0
    83                           	global	main@count
    84  0070                     main@count:	; 2 bytes @ 0x0
    85  0070                     	ds	2
    86                           	global	main@x
    87  0072                     main@x:	; 2 bytes @ 0x2
    88  0072                     	ds	2
    89 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    90 ;;Auto spaces:   Size  Autos    Used
    91 ;; COMMON          14      4       4
    92 ;; BANK0           80      0       0
    93 ;; BANK1           80      0       0
    94 ;; BANK3           96      0       0
    95 ;; BANK2           96      0       0
    96                           
    97 ;;
    98 ;; Pointer list with targets:
    99                           
   100                           
   101                           
   102 ;;
   103 ;; Critical Paths under _main in COMMON
   104 ;;
   105 ;;   None.
   106 ;;
   107 ;; Critical Paths under _main in BANK0
   108 ;;
   109 ;;   None.
   110 ;;
   111 ;; Critical Paths under _main in BANK1
   112 ;;
   113 ;;   None.
   114 ;;
   115 ;; Critical Paths under _main in BANK3
   116 ;;
   117 ;;   None.
   118 ;;
   119 ;; Critical Paths under _main in BANK2
   120 ;;
   121 ;;   None.
   122                           
   123 ;;
   124 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   125 ;;
   126                           
   127 ;;
   128 ;;Call Graph Tables:
   129 ;;
   130 ;; ---------------------------------------------------------------------------------
   131 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   132 ;; ---------------------------------------------------------------------------------
   133 ;; (0) _main                                                 4     4      0      45
   134 ;;                                              0 COMMON     4     4      0
   135 ;; ---------------------------------------------------------------------------------
   136 ;; Estimated maximum stack depth 0
   137 ;; ---------------------------------------------------------------------------------
   138                           
   139 ;; Call Graph Graphs:
   140                           
   141 ;; _main (ROOT)
   142 ;;
   143                           
   144 ;; Address spaces:
   145                           
   146 ;;Name               Size   Autos  Total    Cost      Usage
   147 ;;BITCOMMON            E      0       0       0        0.0%
   148 ;;EEDATA             100      0       0       0        0.0%
   149 ;;NULL                 0      0       0       0        0.0%
   150 ;;CODE                 0      0       0       0        0.0%
   151 ;;COMMON               E      4       4       1       28.6%
   152 ;;BITSFR0              0      0       0       1        0.0%
   153 ;;SFR0                 0      0       0       1        0.0%
   154 ;;BITSFR1              0      0       0       2        0.0%
   155 ;;SFR1                 0      0       0       2        0.0%
   156 ;;STACK                0      0       0       2        0.0%
   157 ;;ABS                  0      0       0       3        0.0%
   158 ;;BITBANK0            50      0       0       4        0.0%
   159 ;;BITSFR3              0      0       0       4        0.0%
   160 ;;SFR3                 0      0       0       4        0.0%
   161 ;;BANK0               50      0       0       5        0.0%
   162 ;;BITSFR2              0      0       0       5        0.0%
   163 ;;SFR2                 0      0       0       5        0.0%
   164 ;;BITBANK1            50      0       0       6        0.0%
   165 ;;BANK1               50      0       0       7        0.0%
   166 ;;BITBANK3            60      0       0       8        0.0%
   167 ;;BANK3               60      0       0       9        0.0%
   168 ;;BITBANK2            60      0       0      10        0.0%
   169 ;;BANK2               60      0       0      11        0.0%
   170 ;;DATA                 0      0       0      12        0.0%
   171                           
   172                           	global	_main
   173                           psect	maintext
   174                           
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 3 in file "E:\KTU\Softwares\mplab\Simpleonoff\simpleonoff.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;  x               2    2[COMMON] int 
   182 ;;  count           2    0[COMMON] int 
   183 ;; Return value:  Size  Location     Type
   184 ;;		None               void
   185 ;; Registers used:
   186 ;;		wreg, status,2, status,0, btemp+1
   187 ;; Tracked objects:
   188 ;;		On entry : 17F/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   192 ;;      Params:         0       0       0       0       0
   193 ;;      Locals:         4       0       0       0       0
   194 ;;      Temps:          0       0       0       0       0
   195 ;;      Totals:         4       0       0       0       0
   196 ;;Total ram usage:        4 bytes
   197 ;; This function calls:
   198 ;;		Nothing
   199 ;; This function is called by:
   200 ;;		Startup code after reset
   201 ;; This function uses a non-reentrant model
   202 ;;
   203                           psect	maintext
   204                           	file	"E:\KTU\Softwares\mplab\Simpleonoff\simpleonoff.c"
   205                           	line	3
   206                           	global	__size_of_main
   207  0056                     	__size_of_main	equ	__end_of_main-_main
   208                           	
   209  07AA                     _main:	
   210                           	opt	stack 8
   211                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   212                           	line	4
   213                           	
   214  07AA                     l1405:	
   215                           ;simpleonoff.c: 4: PORTA=0X00;
   216  07AA  1283               	bcf	status, 5	;RP0=0, select bank0
   217  07AB  1303               	bcf	status, 6	;RP1=0, select bank0
   218  07AC  0185               	clrf	(5)	;volatile
   219                           	line	5
   220                           ;simpleonoff.c: 5: PORTB=0X00;
   221  07AD  0186               	clrf	(6)	;volatile
   222                           	line	6
   223                           	
   224  07AE                     l1407:	
   225                           ;simpleonoff.c: 6: TRISA=0X01;
   226  07AE  3001               	movlw	(01h)
   227  07AF  1683               	bsf	status, 5	;RP0=1, select bank1
   228  07B0  1303               	bcf	status, 6	;RP1=0, select bank1
   229  07B1  0085               	movwf	(133)^080h	;volatile
   230                           	line	7
   231                           	
   232  07B2                     l1409:	
   233                           ;simpleonoff.c: 7: TRISB=0X00;
   234  07B2  0186               	clrf	(134)^080h	;volatile
   235                           	line	8
   236                           	
   237  07B3                     l1411:	
   238                           ;simpleonoff.c: 8: ANSEL=0X00;
   239  07B3  1683               	bsf	status, 5	;RP0=1, select bank3
   240  07B4  1703               	bsf	status, 6	;RP1=1, select bank3
   241  07B5  0188               	clrf	(392)^0180h	;volatile
   242                           	line	9
   243                           	
   244  07B6                     l1413:	
   245                           ;simpleonoff.c: 9: ANSELH=0X00;
   246  07B6  0189               	clrf	(393)^0180h	;volatile
   247                           	line	10
   248                           	
   249  07B7                     l1415:	
   250                           ;simpleonoff.c: 10: int x=0;
   251  07B7  01F2               	clrf	(main@x)
   252  07B8  01F3               	clrf	(main@x+1)
   253  07B9  2FBA               	goto	l1417
   254                           	line	12
   255                           ;simpleonoff.c: 11: int count;
   256                           ;simpleonoff.c: 12: while(1)
   257                           	
   258  07BA                     l1025:	
   259                           	line	14
   260                           	
   261  07BA                     l1417:	
   262                           ;simpleonoff.c: 13: {
   263                           ;simpleonoff.c: 14: if(RA0==1)
   264  07BA  1283               	bcf	status, 5	;RP0=0, select bank0
   265  07BB  1303               	bcf	status, 6	;RP1=0, select bank0
   266  07BC  1C05               	btfss	(40/8),(40)&7
   267  07BD  2FBF               	goto	u11
   268  07BE  2FC0               	goto	u10
   269  07BF                     u11:
   270  07BF  2FBA               	goto	l1417
   271  07C0                     u10:
   272                           	line	16
   273                           	
   274  07C0                     l1419:	
   275                           ;simpleonoff.c: 15: {
   276                           ;simpleonoff.c: 16: x++;
   277  07C0  3001               	movlw	low(01h)
   278  07C1  07F2               	addwf	(main@x),f
   279  07C2  1803               	skipnc
   280  07C3  0AF3               	incf	(main@x+1),f
   281  07C4  3000               	movlw	high(01h)
   282  07C5  07F3               	addwf	(main@x+1),f
   283                           	line	17
   284                           ;simpleonoff.c: 17: if(x==1)
   285  07C6  3001               	movlw	01h
   286  07C7  0672               	xorwf	(main@x),w
   287  07C8  0473               	iorwf	(main@x+1),w
   288  07C9  1D03               	skipz
   289  07CA  2FCC               	goto	u21
   290  07CB  2FCD               	goto	u20
   291  07CC                     u21:
   292  07CC  2FBA               	goto	l1417
   293  07CD                     u20:
   294  07CD  2FD9               	goto	l1425
   295                           	line	19
   296                           	
   297  07CE                     l1421:	
   298                           ;simpleonoff.c: 18: {
   299                           ;simpleonoff.c: 19: while(count<30000)
   300  07CE  2FD9               	goto	l1425
   301                           	
   302  07CF                     l1029:	
   303                           	line	21
   304                           ;simpleonoff.c: 20: {
   305                           ;simpleonoff.c: 21: RB0=1;
   306  07CF  1283               	bcf	status, 5	;RP0=0, select bank0
   307  07D0  1303               	bcf	status, 6	;RP1=0, select bank0
   308  07D1  1406               	bsf	(48/8),(48)&7
   309                           	line	22
   310                           	
   311  07D2                     l1423:	
   312                           ;simpleonoff.c: 22: count++;
   313  07D2  3001               	movlw	low(01h)
   314  07D3  07F0               	addwf	(main@count),f
   315  07D4  1803               	skipnc
   316  07D5  0AF1               	incf	(main@count+1),f
   317  07D6  3000               	movlw	high(01h)
   318  07D7  07F1               	addwf	(main@count+1),f
   319  07D8  2FD9               	goto	l1425
   320                           	line	23
   321                           	
   322  07D9                     l1028:	
   323                           	line	19
   324                           	
   325  07D9                     l1425:	
   326  07D9  0871               	movf	(main@count+1),w
   327  07DA  3A80               	xorlw	80h
   328  07DB  00FF               	movwf	btemp+1
   329  07DC  30F5               	movlw	(high(07530h))^80h
   330  07DD  027F               	subwf	btemp+1,w
   331  07DE  1D03               	skipz
   332  07DF  2FE2               	goto	u35
   333  07E0  3030               	movlw	low(07530h)
   334  07E1  0270               	subwf	(main@count),w
   335  07E2                     u35:
   336                           
   337  07E2  1C03               	skipc
   338  07E3  2FE5               	goto	u31
   339  07E4  2FE6               	goto	u30
   340  07E5                     u31:
   341  07E5  2FCF               	goto	l1029
   342  07E6                     u30:
   343                           	
   344  07E6                     l1030:	
   345                           	line	24
   346                           ;simpleonoff.c: 23: }
   347                           ;simpleonoff.c: 24: RB0=0;
   348  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
   349  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
   350  07E8  1006               	bcf	(48/8),(48)&7
   351                           	line	25
   352                           	
   353  07E9                     l1427:	
   354                           ;simpleonoff.c: 25: count=0;
   355  07E9  01F0               	clrf	(main@count)
   356  07EA  01F1               	clrf	(main@count+1)
   357                           	line	26
   358                           ;simpleonoff.c: 26: while(RA0==1);
   359  07EB  2FEC               	goto	l1031
   360                           	
   361  07EC                     l1032:	
   362                           	
   363  07EC                     l1031:	
   364  07EC  1805               	btfsc	(40/8),(40)&7
   365  07ED  2FEF               	goto	u41
   366  07EE  2FF0               	goto	u40
   367  07EF                     u41:
   368  07EF  2FEC               	goto	l1031
   369  07F0                     u40:
   370  07F0  2FF1               	goto	l1429
   371                           	
   372  07F1                     l1033:	
   373                           	line	27
   374                           	
   375  07F1                     l1429:	
   376                           ;simpleonoff.c: 27: x=x-1;
   377  07F1  0872               	movf	(main@x),w
   378  07F2  3EFF               	addlw	low(-1)
   379  07F3  00F2               	movwf	(main@x)
   380  07F4  0873               	movf	(main@x+1),w
   381  07F5  1803               	skipnc
   382  07F6  3E01               	addlw	1
   383  07F7  3EFF               	addlw	high(-1)
   384  07F8  00F3               	movwf	1+(main@x)
   385  07F9  2FBA               	goto	l1417
   386                           	line	28
   387                           	
   388  07FA                     l1027:	
   389  07FA  2FBA               	goto	l1417
   390                           	line	29
   391                           	
   392  07FB                     l1026:	
   393  07FB  2FBA               	goto	l1417
   394                           	line	30
   395                           	
   396  07FC                     l1034:	
   397                           	line	12
   398  07FC  2FBA               	goto	l1417
   399                           	
   400  07FD                     l1035:	
   401                           	line	31
   402                           	
   403  07FD                     l1036:	
   404                           	global	start
   405  07FD  120A  118A  2800   	ljmp	start
   406                           	opt stack 0
   407                           GLOBAL	__end_of_main
   408  0800                     	__end_of_main:
   409 ;; =============== function _main ends ============
   410                           
   411                           	signat	_main,88
   412                           psect	maintext
   413                           	global	btemp
   414  007E                     	btemp set 07Eh
   415                           
   416                           	DABS	1,126,2	;btemp
   417                           	global	wtemp0
   418  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Thu Apr 22 20:44:46 2021

                  u10 07C0                    u11 07BF                    u20 07CD                    u21 07CC  
                  u30 07E6                    u31 07E5                    u40 07F0                    u41 07EF  
                  u35 07E2                   _RA0 0028                   _RB0 0030                  l1030 07E6  
                l1031 07EC                  l1032 07EC                  l1033 07F1                  l1025 07BA  
                l1034 07FC                  l1026 07FB                  l1035 07FD                  l1027 07FA  
                l1036 07FD                  l1028 07D9                  l1029 07CF                  l1411 07B3  
                l1421 07CE                  l1413 07B6                  l1405 07AA                  l1423 07D2  
                l1415 07B7                  l1407 07AE                  l1425 07D9                  l1417 07BA  
                l1409 07B2                  l1427 07E9                  l1419 07C0                  l1429 07F1  
                _main 07AA                  btemp 007E                  start 0000                 ?_main 0070  
               _ANSEL 0188                 _PORTA 0005                 _PORTB 0006                 _TRISA 0085  
               _TRISB 0086                 main@x 0072                 status 0003                 wtemp0 007E  
        __end_of_main 0800                ??_main 0070                _ANSELH 0189        __pcstackCOMMON 0070  
          __pmaintext 07AA  end_of_initialization 07A6   start_initialization 07A6             main@count 0070  
       __size_of_main 0056  
