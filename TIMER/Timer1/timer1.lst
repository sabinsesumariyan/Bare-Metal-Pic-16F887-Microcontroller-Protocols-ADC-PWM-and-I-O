

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sat Jun 12 13:00:46 2021

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_timer1
    43                           	FNROOT	_main
    44                           	global	_count
    45                           	global	_PORTC
    46                           psect	text60,local,class=CODE,delta=2
    47                           global __ptext60
    48  0000                     __ptext60:
    49  0007                     _PORTC	set	7
    50                           	global	_PORTD
    51  0008                     _PORTD	set	8
    52                           	global	_T1CON
    53  0010                     _T1CON	set	16
    54                           	global	_RC0
    55  0038                     _RC0	set	56
    56                           	global	_TMR1IF
    57  0060                     _TMR1IF	set	96
    58                           	global	_TRISC
    59  0087                     _TRISC	set	135
    60                           	global	_TRISD
    61  0088                     _TRISD	set	136
    62                           	file	"timer1.as"
    63                           	line	#
    64                           psect cinit,class=CODE,delta=2
    65                           global start_initialization
    66  07A0                     start_initialization:
    67                           
    68                           psect	bssCOMMON,class=COMMON,space=1
    69                           global __pbssCOMMON
    70  0070                     __pbssCOMMON:
    71  0070                     _count:
    72  0070                            ds      2
    73                           
    74                           ; Clear objects allocated to COMMON
    75                           psect cinit,class=CODE,delta=2
    76  07A0  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
    77  07A1  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
    78                           psect cinit,class=CODE,delta=2
    79                           global end_of_initialization
    80                           
    81                           ;End of C runtime variable initialization code
    82                           
    83  07A2                     end_of_initialization:
    84  07A2  0183               clrf status
    85  07A3  120A  118A  2FB5   ljmp _main	;jump to C main() function
    86                           psect	cstackCOMMON,class=COMMON,space=1
    87                           global __pcstackCOMMON
    88  0000                     __pcstackCOMMON:
    89                           	global	?_timer1
    90  0000                     ?_timer1:	; 0 bytes @ 0x0
    91                           	global	??_timer1
    92  0000                     ??_timer1:	; 0 bytes @ 0x0
    93                           	global	?_main
    94  0000                     ?_main:	; 0 bytes @ 0x0
    95                           	global	??_main
    96  0000                     ??_main:	; 0 bytes @ 0x0
    97 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 0 stack 0
    98 ;;Auto spaces:   Size  Autos    Used
    99 ;; COMMON          14      0       2
   100 ;; BANK0           80      0       0
   101 ;; BANK1           80      0       0
   102 ;; BANK3           96      0       0
   103 ;; BANK2           96      0       0
   104                           
   105 ;;
   106 ;; Pointer list with targets:
   107                           
   108                           
   109                           
   110 ;;
   111 ;; Critical Paths under _main in COMMON
   112 ;;
   113 ;;   None.
   114 ;;
   115 ;; Critical Paths under _main in BANK0
   116 ;;
   117 ;;   None.
   118 ;;
   119 ;; Critical Paths under _main in BANK1
   120 ;;
   121 ;;   None.
   122 ;;
   123 ;; Critical Paths under _main in BANK3
   124 ;;
   125 ;;   None.
   126 ;;
   127 ;; Critical Paths under _main in BANK2
   128 ;;
   129 ;;   None.
   130                           
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   133 ;;
   134                           
   135 ;;
   136 ;;Call Graph Tables:
   137 ;;
   138 ;; ---------------------------------------------------------------------------------
   139 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   140 ;; ---------------------------------------------------------------------------------
   141 ;; (0) _main                                                 0     0      0       0
   142 ;;                             _timer1
   143 ;; ---------------------------------------------------------------------------------
   144 ;; (1) _timer1                                               0     0      0       0
   145 ;; ---------------------------------------------------------------------------------
   146 ;; Estimated maximum stack depth 1
   147 ;; ---------------------------------------------------------------------------------
   148                           
   149 ;; Call Graph Graphs:
   150                           
   151 ;; _main (ROOT)
   152 ;;   _timer1
   153 ;;
   154                           
   155 ;; Address spaces:
   156                           
   157 ;;Name               Size   Autos  Total    Cost      Usage
   158 ;;BITCOMMON            E      0       0       0        0.0%
   159 ;;EEDATA             100      0       0       0        0.0%
   160 ;;NULL                 0      0       0       0        0.0%
   161 ;;CODE                 0      0       0       0        0.0%
   162 ;;COMMON               E      0       2       1       14.3%
   163 ;;BITSFR0              0      0       0       1        0.0%
   164 ;;SFR0                 0      0       0       1        0.0%
   165 ;;BITSFR1              0      0       0       2        0.0%
   166 ;;SFR1                 0      0       0       2        0.0%
   167 ;;STACK                0      0       1       2        0.0%
   168 ;;ABS                  0      0       2       3        0.0%
   169 ;;BITBANK0            50      0       0       4        0.0%
   170 ;;BITSFR3              0      0       0       4        0.0%
   171 ;;SFR3                 0      0       0       4        0.0%
   172 ;;BANK0               50      0       0       5        0.0%
   173 ;;BITSFR2              0      0       0       5        0.0%
   174 ;;SFR2                 0      0       0       5        0.0%
   175 ;;BITBANK1            50      0       0       6        0.0%
   176 ;;BANK1               50      0       0       7        0.0%
   177 ;;BITBANK3            60      0       0       8        0.0%
   178 ;;BANK3               60      0       0       9        0.0%
   179 ;;BITBANK2            60      0       0      10        0.0%
   180 ;;BANK2               60      0       0      11        0.0%
   181 ;;DATA                 0      0       3      12        0.0%
   182                           
   183                           	global	_main
   184                           psect	maintext,global,class=CODE,delta=2
   185                           global __pmaintext
   186  07B5                     __pmaintext:
   187                           
   188 ;; *************** function _main *****************
   189 ;; Defined at:
   190 ;;		line 12 in file "E:\KTU\Softwares\MP lab\TIMER\Timer1\timer1.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;		None
   195 ;; Return value:  Size  Location     Type
   196 ;;		None               void
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   199 ;; Tracked objects:
   200 ;;		On entry : 17F/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   204 ;;      Params:         0       0       0       0       0
   205 ;;      Locals:         0       0       0       0       0
   206 ;;      Temps:          0       0       0       0       0
   207 ;;      Totals:         0       0       0       0       0
   208 ;;Total ram usage:        0 bytes
   209 ;; Hardware stack levels required when called:    1
   210 ;; This function calls:
   211 ;;		_timer1
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           psect	maintext
   217                           	file	"E:\KTU\Softwares\MP lab\TIMER\Timer1\timer1.c"
   218                           	line	12
   219                           	global	__size_of_main
   220  004B                     	__size_of_main	equ	__end_of_main-_main
   221                           	
   222  07B5                     _main:	
   223                           	opt	stack 7
   224                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   225                           	line	13
   226                           	
   227  07B5                     l2178:	
   228                           ;timer1.c: 13: TRISD=0x00;
   229  07B5  1683               	bsf	status, 5	;RP0=1, select bank1
   230  07B6  1303               	bcf	status, 6	;RP1=0, select bank1
   231  07B7  0188               	clrf	(136)^080h	;volatile
   232                           	line	14
   233                           ;timer1.c: 14: PORTD=0x00;
   234  07B8  1283               	bcf	status, 5	;RP0=0, select bank0
   235  07B9  1303               	bcf	status, 6	;RP1=0, select bank0
   236  07BA  0188               	clrf	(8)	;volatile
   237                           	line	15
   238                           ;timer1.c: 15: TRISC=0x00;
   239  07BB  1683               	bsf	status, 5	;RP0=1, select bank1
   240  07BC  1303               	bcf	status, 6	;RP1=0, select bank1
   241  07BD  0187               	clrf	(135)^080h	;volatile
   242                           	line	16
   243                           ;timer1.c: 16: PORTC=0x00;
   244  07BE  1283               	bcf	status, 5	;RP0=0, select bank0
   245  07BF  1303               	bcf	status, 6	;RP1=0, select bank0
   246  07C0  0187               	clrf	(7)	;volatile
   247                           	line	17
   248                           	
   249  07C1                     l2180:	
   250                           ;timer1.c: 17: T1CON=0x31;
   251  07C1  3031               	movlw	(031h)
   252  07C2  0090               	movwf	(16)	;volatile
   253  07C3  2FC4               	goto	l2182
   254                           	line	18
   255                           ;timer1.c: 18: while(1)
   256                           	
   257  07C4                     l1031:	
   258                           	line	20
   259                           	
   260  07C4                     l2182:	
   261                           ;timer1.c: 19: {
   262                           ;timer1.c: 20: timer1();
   263  07C4  120A  118A  27A6   	fcall	_timer1
              120A  118A         
   264                           	line	21
   265                           	
   266  07C9                     l2184:	
   267                           ;timer1.c: 21: if(count<=2)
   268  07C9  0871               	movf	(_count+1),w
   269  07CA  3A80               	xorlw	80h
   270  07CB  00FF               	movwf	btemp+1
   271  07CC  3080               	movlw	(high(03h))^80h
   272  07CD  027F               	subwf	btemp+1,w
   273  07CE  1D03               	skipz
   274  07CF  2FD2               	goto	u2155
   275  07D0  3003               	movlw	low(03h)
   276  07D1  0270               	subwf	(_count),w
   277  07D2                     u2155:
   278                           
   279  07D2  1803               	skipnc
   280  07D3  2FD5               	goto	u2151
   281  07D4  2FD6               	goto	u2150
   282  07D5                     u2151:
   283  07D5  2FDA               	goto	l2188
   284  07D6                     u2150:
   285                           	line	23
   286                           	
   287  07D6                     l2186:	
   288                           ;timer1.c: 22: {
   289                           ;timer1.c: 23: RC0=1;
   290  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
   291  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
   292  07D8  1407               	bsf	(56/8),(56)&7
   293  07D9  2FDA               	goto	l2188
   294                           	line	24
   295                           	
   296  07DA                     l1032:	
   297                           	line	25
   298                           	
   299  07DA                     l2188:	
   300                           ;timer1.c: 24: }
   301                           ;timer1.c: 25: if(count>2)
   302  07DA  0871               	movf	(_count+1),w
   303  07DB  3A80               	xorlw	80h
   304  07DC  00FF               	movwf	btemp+1
   305  07DD  3080               	movlw	(high(03h))^80h
   306  07DE  027F               	subwf	btemp+1,w
   307  07DF  1D03               	skipz
   308  07E0  2FE3               	goto	u2165
   309  07E1  3003               	movlw	low(03h)
   310  07E2  0270               	subwf	(_count),w
   311  07E3                     u2165:
   312                           
   313  07E3  1C03               	skipc
   314  07E4  2FE6               	goto	u2161
   315  07E5  2FE7               	goto	u2160
   316  07E6                     u2161:
   317  07E6  2FEB               	goto	l2192
   318  07E7                     u2160:
   319                           	line	27
   320                           	
   321  07E7                     l2190:	
   322                           ;timer1.c: 26: {
   323                           ;timer1.c: 27: RC0=0;
   324  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
   325  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
   326  07E9  1007               	bcf	(56/8),(56)&7
   327  07EA  2FEB               	goto	l2192
   328                           	line	28
   329                           	
   330  07EB                     l1033:	
   331                           	line	29
   332                           	
   333  07EB                     l2192:	
   334                           ;timer1.c: 28: }
   335                           ;timer1.c: 29: if(count>=4)
   336  07EB  0871               	movf	(_count+1),w
   337  07EC  3A80               	xorlw	80h
   338  07ED  00FF               	movwf	btemp+1
   339  07EE  3080               	movlw	(high(04h))^80h
   340  07EF  027F               	subwf	btemp+1,w
   341  07F0  1D03               	skipz
   342  07F1  2FF4               	goto	u2175
   343  07F2  3004               	movlw	low(04h)
   344  07F3  0270               	subwf	(_count),w
   345  07F4                     u2175:
   346                           
   347  07F4  1C03               	skipc
   348  07F5  2FF7               	goto	u2171
   349  07F6  2FF8               	goto	u2170
   350  07F7                     u2171:
   351  07F7  2FC4               	goto	l2182
   352  07F8                     u2170:
   353                           	line	31
   354                           	
   355  07F8                     l2194:	
   356                           ;timer1.c: 30: {
   357                           ;timer1.c: 31: count=0;
   358  07F8  01F0               	clrf	(_count)
   359  07F9  01F1               	clrf	(_count+1)
   360  07FA  2FC4               	goto	l2182
   361                           	line	32
   362                           	
   363  07FB                     l1034:	
   364  07FB  2FC4               	goto	l2182
   365                           	line	33
   366                           	
   367  07FC                     l1035:	
   368                           	line	18
   369  07FC  2FC4               	goto	l2182
   370                           	
   371  07FD                     l1036:	
   372                           	line	34
   373                           	
   374  07FD                     l1037:	
   375                           	global	start
   376  07FD  120A  118A  2800   	ljmp	start
   377                           	opt stack 0
   378                           GLOBAL	__end_of_main
   379  0800                     	__end_of_main:
   380 ;; =============== function _main ends ============
   381                           
   382                           	signat	_main,88
   383                           	global	_timer1
   384                           psect	text61,local,class=CODE,delta=2
   385                           global __ptext61
   386  07A6                     __ptext61:
   387                           
   388 ;; *************** function _timer1 *****************
   389 ;; Defined at:
   390 ;;		line 4 in file "E:\KTU\Softwares\MP lab\TIMER\Timer1\timer1.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;		None               void
   397 ;; Registers used:
   398 ;;		wreg
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           psect	text61
   417                           	file	"E:\KTU\Softwares\MP lab\TIMER\Timer1\timer1.c"
   418                           	line	4
   419                           	global	__size_of_timer1
   420  000F                     	__size_of_timer1	equ	__end_of_timer1-_timer1
   421                           	
   422  07A6                     _timer1:	
   423                           	opt	stack 7
   424                           ; Regs used in _timer1: [wreg]
   425                           	line	5
   426                           	
   427  07A6                     l1406:	
   428                           ;timer1.c: 5: if(TMR1IF==1)
   429  07A6  1283               	bcf	status, 5	;RP0=0, select bank0
   430  07A7  1303               	bcf	status, 6	;RP1=0, select bank0
   431  07A8  1C0C               	btfss	(96/8),(96)&7
   432  07A9  2FAB               	goto	u11
   433  07AA  2FAC               	goto	u10
   434  07AB                     u11:
   435  07AB  2FB4               	goto	l1028
   436  07AC                     u10:
   437                           	line	7
   438                           	
   439  07AC                     l1408:	
   440                           ;timer1.c: 6: {
   441                           ;timer1.c: 7: count++;
   442  07AC  3001               	movlw	low(01h)
   443  07AD  07F0               	addwf	(_count),f
   444  07AE  1803               	skipnc
   445  07AF  0AF1               	incf	(_count+1),f
   446  07B0  3000               	movlw	high(01h)
   447  07B1  07F1               	addwf	(_count+1),f
   448                           	line	8
   449                           	
   450  07B2                     l1410:	
   451                           ;timer1.c: 8: TMR1IF=0;
   452  07B2  100C               	bcf	(96/8),(96)&7
   453  07B3  2FB4               	goto	l1028
   454                           	line	9
   455                           	
   456  07B4                     l1027:	
   457                           	line	10
   458                           	
   459  07B4                     l1028:	
   460  07B4  0008               	return
   461                           	opt stack 0
   462                           GLOBAL	__end_of_timer1
   463  07B5                     	__end_of_timer1:
   464 ;; =============== function _timer1 ends ============
   465                           
   466                           	signat	_timer1,88
   467                           psect	text62,local,class=CODE,delta=2
   468                           global __ptext62
   469  0000                     __ptext62:
   470                           	global	btemp
   471  007E                     	btemp set 07Eh
   472                           
   473                           	DABS	1,126,2	;btemp
   474                           	global	wtemp0
   475  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sat Jun 12 13:00:46 2021

                  u10 07AC                    u11 07AB                   _RC0 0038                  l1031 07C4  
                l1032 07DA                  l1033 07EB                  l1034 07FB                  l1027 07B4  
                l1035 07FC                  l1028 07B4                  l1036 07FD                  l1037 07FD  
                l1410 07B2                  l1406 07A6                  l1408 07AC                  l2180 07C1  
                l2190 07E7                  l2182 07C4                  l2192 07EB                  l2184 07C9  
                l2194 07F8                  l2186 07D6                  l2178 07B5                  l2188 07DA  
                u2150 07D6                  u2151 07D5                  u2160 07E7                  u2161 07E6  
                u2170 07F8                  u2171 07F7                  u2155 07D2                  u2165 07E3  
                u2175 07F4                  _main 07B5                  btemp 007E                  start 0000  
               ?_main 0000                 _T1CON 0010                 _PORTC 0007                 _PORTD 0008  
               _TRISC 0087                 _TRISD 0088                 _count 0070                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0000                _TMR1IF 0060  
              _timer1 07A6        __pcstackCOMMON 0000            __pmaintext 07B5               ?_timer1 0000  
     __size_of_timer1 000F  end_of_initialization 07A2        __end_of_timer1 07B5   start_initialization 07A0  
            ??_timer1 0000           __pbssCOMMON 0070              __ptext60 0000              __ptext61 07A6  
            __ptext62 0000         __size_of_main 004B  
